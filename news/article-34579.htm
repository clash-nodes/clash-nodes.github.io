<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-nodes.github.io/news/article-34579.htm" />
    <title>ElementUI el-upload 断点续传文件</title>
        <meta name="description" content="官方的Upload 组件从文档和所有demo来看，均是选中文件直接上传，但是业务系统有大文件上传的需求，所以要用这个组件封装一个断点续传的功能。 从官方给出的文档看到有个http-request 覆盖" />
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/clash_nodes/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XW6LB7RVY3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XW6LB7RVY3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/bootstrap-4.1.2/bootstrap.min.css">
    <link href="__ADDON__/js/frontend/clash_nodes/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/about_responsive.css">
</head>

<body data-page="detail">
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Clash<span>Nodes</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-href="/assets/website/img/clash_nodes/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">ElementUI el-upload 断点续传文件</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <p>官方的<code>Upload</code> 组件从文档和所有demo来看，均是选中文件直接上传，但是业务系统有大文件上传的需求，所以要用这个组件封装一个断点续传的功能。</p> <p>从官方给出的文档看到有个<code>http-request 覆盖默认的上传行为，可以自定义上传的实现</code> 似乎能满足要求，那就开撸。</p> <p>确定需求：最大支持2GB的任意文件上传，小于100M直接上传，大于100M的时候分块上传，并且要支持断点续传。</p> <p>我拿了官方的一个demo</p> <pre><code> &lt;el-upload       drag       multiple       :http-request="checkedFile"       action="/"     &gt;       &lt;i class="el-icon-upload"&gt;&lt;/i&gt;       &lt;div class="el-upload__text"&gt;将文件拖到此处，或&lt;em&gt;点击上传&lt;/em&gt;&lt;/div&gt;     &lt;/el-upload&gt;</code></pre> <p>可拖动上传，比较高大上一点。</p> <p><code>http-request</code> 方法定义之后，文件上传会先走这个方法，传入一个参数</p> <pre><code>options = { 	headers: this.headers, 	withCredentials: this.withCredentials, 	file: rawFile, 	data: this.data, 	filename: this.name, 	action: this.action, 	onProgress: e =&gt; { 	  this.onProgress(e, rawFile); 	}, 	onSuccess: res =&gt; { 	  this.onSuccess(res, rawFile); 	  delete this.reqs[uid]; 	}, 	onError: err =&gt; { 	  this.onError(err, rawFile); 	  delete this.reqs[uid]; 	} }</code></pre> <p>该参数就是组件的参数集合，同时，如果定义了这个方法，组件的<code>submit</code>方法就会被拦截掉（注意别在这个方法里面调用组件的<code>submit</code> 方法，会造成死循环），在这个方法里面我就可以搞我想搞的事情了。</p> <p>说一下要注意的：<br /> 使用这个断点续传方法一定要先和服务端协调好，看他们怎么处理的，比如我这里就是按照文件分块后按照序号和文件id等信息跟服务端建立联系，服务端从接收到第一块文件的请求开始就会检测该文件是否已经存在已接收的文件块，然后再返回续传的块的序号，最终再调用接口校验文件完不完整。</p> <p>如果使用<code>mock</code>来模拟接口的话，<code>onUploadProgress</code>是无效的，因为<code>mock</code>会重新声明一个<code>XMLHttpRequest</code>，不会继承<code>onUploadProgress</code>。</p> <p>以上，就是<code>el-upload</code>组件的大文件分块上传的改造方案，目前还很粗糙，甚至还没过测试，如有问题会持续更新</p> <p>20180726<br /> 看源码的时候发现<code>http-request</code> 这个传入的回调函数应该返回一个<code>Promise</code></p> <pre><code>  const req = this.httpRequest(options);   this.reqs[uid] = req;   if (req &amp;&amp; req.then) {     req.then(options.onSuccess, options.onError);   }</code></pre> <p>然后组件自己会做成功和错误的处理，但是我同时又注意到了组件是有删除文件的功能的，那我请求自己实现的话，这功能岂不是没法用？果然我一点X，立马报了一个<code>reqs[uid].abort is not a function</code> ，果然如此，我返回了一个最普通的<code>Promise</code>，当然没有<code>abort</code>方法了（是原生<code>XMLHttpRequest</code> 对象的方法）<br /> 我在返回的<code>Promise</code>动了一下手脚</p> <pre><code>const prom = new Promise((resolve, reject) =&gt; {}) prom.abort = () =&gt; {} return prom</code></pre> <p>这三句话的意思就：大爷我给您跪了，别报错……<br /> 接下来就在组件的钩子函数<code>before-remove</code>来处理删除文件的功能。<br /><code>axios</code>截断请求可以传入一个<code>cancelToken</code>的值来返回一个<code>cancel function</code>，这部分就在data里面添加一个请求队列的参数，再把文件id和相关请求的截断方法push进去就可以了，改造后的<code>postFile</code>方法如下</p> <pre><code> postFile (param, onProgress) {       const formData = new FormData()       for (let p in param) {         formData.append(p, param<div class="section-content"></p></div><p>)       }       const { requestCancelQueue } = this       const config = {         cancelToken: new axios.CancelToken(function executor (cancel) {           if (requestCancelQueue[param.uid]) {             requestCancelQueue[param.uid]()             delete requestCancelQueue[param.uid]           }           requestCancelQueue[param.uid] = cancel         }),         onUploadProgress: e =&gt; {           e.percent = Number(((e.loaded / e.total) * (1 / (param.chunks || 1)) * 100).toFixed(2))           onProgress(e)         }       }       return axios.post('/upload', formData, config).then(rs =&gt; rs.data.data)     }</code></pre> <p>然后<code>before-remove</code>钩子的处理就只需要调用就OK了</p> <pre><code>	removeFile (file) {       this.requestCancelQueue[file.uid]()       delete this.requestCancelQueue[file.uid]       return false     }</code></pre> <p>最后贴上完整的组件源码，直接拷贝粘贴可用（依赖element-ui、axios）</p> <pre><code>&lt;template&gt;   &lt;el-upload     drag     multiple     :auto-upload="true"     :http-request="checkedFile"     :before-remove="removeFile"     :limit="10"     action="/"   &gt;     &lt;i class="el-icon-upload"&gt;&lt;/i&gt;     &lt;div class="el-upload__text"&gt;将文件拖到此处，或&lt;em&gt;点击上传&lt;/em&gt;&lt;/div&gt;   &lt;/el-upload&gt; &lt;/template&gt; &lt;script&gt; import axios from 'axios' export default {   data () {     return {       maxSize: 5 * 1024 * 1024 * 1024, // 上传最大文件限制       multiUploadSize: 500 * 1024 * 1024, // 大于这个大小的文件使用分块上传(后端可以支持断点续传)       eachSize: 500 * 1024 * 1024, // 每块文件大小       requestCancelQueue: [], // 请求方法队列（调用取消上传     }   },   mounted () {   },   methods: {     async checkedFile (options) {       const { maxSize, multiUploadSize, getSize, splitUpload, singleUpload } = this       const { file, onProgress, onSuccess, onError } = options       if (file.size &gt; maxSize) {         return this.$message({           message: `您选择的文件大于${getSize(maxSize)}`,           type: 'error'         })       }       const uploadFunc = file.size &gt; multiUploadSize ? splitUpload : singleUpload       try {         await uploadFunc(file, onProgress)         this.$message({           message: '上传成功',           type: 'success'         })         onSuccess()       } catch (e) {         console.error(e)         this.$message({           message: e.message,           type: 'error'         })         onError()       }       const prom = new Promise((resolve, reject) =&gt; {})       prom.abort = () =&gt; {}       return prom     },     // 格式化文件大小显示文字     getSize (size) {       return size &gt; 1024         ? size / 1024 &gt; 1024           ? size / (1024 * 1024) &gt; 1024             ? (size / (1024 * 1024 * 1024)).toFixed(2) + 'GB'             : (size / (1024 * 1024)).toFixed(2) + 'MB'           : (size / 1024).toFixed(2) + 'KB'         : (size).toFixed(2) + 'B'     },     // 单文件直接上传     singleUpload (file, onProgress) {       return this.postFile({ file, uid: file.uid, fileName: file.fileName }, onProgress)     },     // 大文件分块上传     splitUpload (file, onProgress) {       return new Promise(async (resolve, reject) =&gt; {         try {           const { eachSize } = this           const chunks = Math.ceil(file.size / eachSize)           const fileChunks = await this.splitFile(file, eachSize, chunks)           let currentChunk = 0           for (let i = 0; i &lt; fileChunks.length; i++) {             // 服务端检测已经上传到第currentChunk块了，那就直接跳到第currentChunk块，实现断点续传             console.log(currentChunk, i)             if (Number(currentChunk) === i) {               // 每块上传完后则返回需要提交的下一块的index               currentChunk = await this.postFile({                 chunked: true,                 chunk: i,                 chunks,                 eachSize,                 fileName: file.name,                 fullSize: file.size,                 uid: file.uid,                 file: fileChunks[i]               }, onProgress)             }           }           const isValidate = await this.validateFile({             chunks: fileChunks.length,             fileName: file.name,             fullSize: file.size,             uid: file.uid           })           if (!isValidate) {             throw new Error('文件校验异常')           }           resolve()         } catch (e) {           reject(e)         }       })     },     // 文件分块,利用Array.prototype.slice方法     splitFile (file, eachSize, chunks) {       return new Promise((resolve, reject) =&gt; {         try {           setTimeout(() =&gt; {             const fileChunk = []             for (let chunk = 0; chunks &gt; 0; chunks--) {               fileChunk.push(file.slice(chunk, chunk + eachSize))               chunk += eachSize             }             resolve(fileChunk)           }, 0)         } catch (e) {           console.error(e)           reject(new Error('文件切块发生错误'))         }       })     },     removeFile (file) {       this.requestCancelQueue[file.uid]()       delete this.requestCancelQueue[file.uid]       return true     },     // 提交文件方法,将参数转换为FormData, 然后通过axios发起请求     postFile (param, onProgress) {       const formData = new FormData()       for (let p in param) {         formData.append(p, param<div class="section-content"></p></div><p>)       }       const { requestCancelQueue } = this       const config = {         cancelToken: new axios.CancelToken(function executor (cancel) {           if (requestCancelQueue[param.uid]) {             requestCancelQueue[param.uid]()             delete requestCancelQueue[param.uid]           }           requestCancelQueue[param.uid] = cancel         }),         onUploadProgress: e =&gt; {           if (param.chunked) {             e.percent = Number(((((param.chunk * (param.eachSize - 1)) + (e.loaded)) / param.fullSize) * 100).toFixed(2))           } else {             e.percent = Number(((e.loaded / e.total) * 100).toFixed(2))           }           onProgress(e)         }       }       return axios.post('http://localhost:8888', formData, config).then(rs =&gt; rs.data)     },     // 文件校验方法     validateFile (file) {       return axios.post('http://localhost:8888/validateFile', file).then(rs =&gt; rs.data)     }   } } &lt;/script&gt;</code></pre> <p>转载请注明出处蟹蟹</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-34578.htm">JavaScript两个异步函数完成后如何运行函数方法详解</a></p>
                                        <p>下一个：<a href="/news/article-34929.htm">vue项目实战精粹汇总</a></p>
                                    </div>
                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-3-free-ssr-subscribe.htm" title="11月3日|Clash/Shadowrocket/SSR/V2ray每天更新18.6M/S免费节点订阅链接，Clash便宜机场订阅">11月3日|Clash/Shadowrocket/SSR/V2ray每天更新18.6M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-14-free-high-speed-nodes.htm" title="11月14日|Shadowrocket/SSR/Clash/V2ray每天更新21.8M/S免费节点订阅链接，Clash便宜机场订阅">11月14日|Shadowrocket/SSR/Clash/V2ray每天更新21.8M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/news/article-22831.htm" title="安安宠物医院官网（安安宠物医院简介）">安安宠物医院官网（安安宠物医院简介）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-free-subscribe-node.htm" title="11月6日|SSR/Shadowrocket/Clash/V2ray每天更新21.4M/S免费节点订阅链接，Clash便宜机场订阅">11月6日|SSR/Shadowrocket/Clash/V2ray每天更新21.4M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-free-v2ray.htm" title="11月7日|V2ray/Clash/SSR/Shadowrocket每天更新19.4M/S免费节点订阅链接，Clash便宜机场订阅">11月7日|V2ray/Clash/SSR/Shadowrocket每天更新19.4M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-29-free-shadowrocket-node.htm" title="10月29日|SSR/V2ray/Clash/Shadowrocket每天更新21.7M/S免费节点订阅链接，Clash便宜机场订阅">10月29日|SSR/V2ray/Clash/Shadowrocket每天更新21.7M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/news/article-31707.htm" title="纯手工宠物零食的产品用途（纯手工宠物零食的产品用途怎么写）">纯手工宠物零食的产品用途（纯手工宠物零食的产品用途怎么写）</a></li>
                        <li class="py-2"><a href="/news/article-33158.htm" title="MaxCompute SQL函数详解 ODPS SQL函数详解之日期相关函数">MaxCompute SQL函数详解 ODPS SQL函数详解之日期相关函数</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-high-speed-nodes.htm" title="11月12日|Clash/Shadowrocket/SSR/V2ray每天更新18M/S免费节点订阅链接，Clash便宜机场订阅">11月12日|Clash/Shadowrocket/SSR/V2ray每天更新18M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-clash-windows.htm" title="12月10日|Clash/SSR/V2ray/Shadowrocket每天更新18.1M/S免费节点订阅链接，Clash便宜机场订阅">12月10日|Clash/SSR/V2ray/Shadowrocket每天更新18.1M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-href="/assets/website/img/clash_nodes/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>
                                ClashNodes分享订阅站 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/website/js/frontend/clash_nodes/jquery-3.2.1.min.js"></script>
    <script src="__ADDON__/css/clash_nodes/bootstrap-4.1.2/popper.js"></script>
    <script src="__ADDON__/css/clash_nodes/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/easing/easing.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/about.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>