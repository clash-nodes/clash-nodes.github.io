<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-nodes.github.io/news/article-30109.htm" />
    <title>在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</title>
        <meta name="description" content="在python中连接hive和impala有很多中方式，有pyhive,impyla,pyspark,ibis等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerber" />
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/clash_nodes/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="AerobicsFit template project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XW6LB7RVY3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XW6LB7RVY3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/bootstrap-4.1.2/bootstrap.min.css">
    <link href="__ADDON__/js/frontend/clash_nodes/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/clash_nodes/plugins/animate.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/about.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nodes/about_responsive.css">
</head>

<body data-page="detail">
    <div class="super_container">
                <!-- Header -->
        <header class="header">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="header_content d-flex flex-row align-items-center justify-content-start">
                            <div class="logo">Clash<span>Nodes</span></div>
                            <nav class="main_nav">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                            <div class="social header_social">
                                <ul class="d-flex flex-row align-items-center justify-content-start">
                                    <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                </ul>
                            </div>
                            <div class="hamburger ml-auto"><i class="fa fa-bars" aria-hidden="true"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- Menu -->
        <div class="menu">
            <div class="menu_content d-flex flex-column align-items-center justify-content-center">
                <ul class="menu_nav_list text-center">
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="index.html">Home</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
        <!-- Home -->
        <div class="home">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-href="/assets/website/img/clash_nodes/about.jpg" data-speed="0.8"></div>
            <div class="home_container">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="home_content">
                                <div class="home_title">在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</div>
                                <div class="breadcrumbs">
                                    <ul class="d-flex flex-row align-items-center justify-content-start">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes -->
        <div class="classes">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="row row-eq-height">
                            <div class="col-md-12">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>在python中连接hive和impala有很多中方式，有<strong>pyhive,impyla,pyspark,ibis</strong>等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerberos认证。</p> </h1> <p>如果集群没开启kerberos认证则不需要这里的代码，或者在系统环境内通过kinit命令认证也不需要这部分的代码。</p> <p><strong>krbcontext.context_shell</strong></p> <pre><code class="language-python"># -*- coding: utf-8 -*-  __all__ = [ 'krbcontext', 'KRB5KinitError', ]  import os, sys # import pwd import subprocess   from contextlib import contextmanager  class KRB5KinitError(Exception):     pass  # def get_login(): #     ''' Get current effective user name ''' # #     return pwd.getpwuid(os.getuid()).pw_name  def init_ccache_as_regular_user(principal=None, ccache_file=None):     '''Initialize credential cache as a regular user      Return the filename of newly initialized credential cache     '''      if not sys.stdin.isatty():         raise IOError('This is not running on console. So, you need to run kinit '                       'with your principal manually before anything goes.')      cmd = 'kinit %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = '-c %s' % ccache_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file    def init_ccache_with_keytab(principal, keytab_file, ccache_file):     '''Initialize credential cache using keytab file      Return the filename of newly initialized credential cache     '''     cmd = 'kinit -kt %(keytab_file)s -c %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = ccache_file     args['keytab_file'] = keytab_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file   @contextmanager def krbcontext(using_keytab=False, **kwargs):     '''A context manager for Kerberos-related actions      using_keytab: specify to use Keytab file in Kerberos context if True,                   or be as a regular user.     kwargs: contains the necessary arguments used in kerberos context.             It can contain principal, keytab_file, ccache_file.             When you want to use Keytab file, keytab_file must be included.     '''      env_name = 'KRB5CCNAME'     old_ccache = os.getenv(env_name)     if using_keytab:         ccache_file = init_ccache_with_keytab(**kwargs)     else:         ccache_file = init_ccache_as_regular_user(kwargs.get("principal"), kwargs.get("ccache_file"))     os.environ[env_name] = ccache_file     yield </code></pre> </h1> <p>使用pyhive连接hive</p> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.3.0  # 如果使用ibis或impyla需要thrift_sasl==0.2.1  thrift==0.13.0  thriftpy==0.3.5  """  from pyhive import sqlalchemy_hive,hive from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>两种方式，一种是在系统环境内让当前用户通过kinit 先保持kerberos的认证，那所有的代码里就无需再写kerberos认证代码了。另一种方式，在python脚本内使用下面的代码进入kerberos认证会话：</p> <pre><code class="language-python">config = {     "kerberos_principal": "hive@CSDNTEST.COM.LOCAL",     "keytab_file": '/home/tools/wyk/keytab/hive.keytab',       "kerberos_ccache_file": '/home/tools/wyk/keytab/hive_ccache_uid',     "AUTH_MECHANISM": "GSSAPI" } with krbcontext(using_keytab=True,                                principal=config['kerberos_principal'],                                keytab_file=config['keytab_file'],                                ccache_file=config['kerberos_ccache_file']):     #在这个代码块内执行的脚本都是在kerberos认证内的。     #可在此代码块内查询hdfs hive hbase等等只要是kerberos principal有权限的组件都可以</code></pre> <h3>使用</h3> <p>下面的代码需要在上面的kerberos代码块内才能通过kerberos认证，如果集群没有开启kerberos认证或当期系统已使用kinit进行了认证则无需上面的代码：</p> <pre><code>con = hive.connect(host='uatnd02.csdntest.com.local',port=10000,auth='KERBEROS',kerberos_service_name="hive") #host为hiveserver2所在节点，port默认10000，为hs2的端口     cursor = con.cursor()     cursor.execute('select * from dl_nccp.account limit 5') #不能有分号！     # cursor.execute('desc dl_nccp.account') #不能有分号！     datas = cursor.fetchall()     print(datas)     cursor.close()     con.close()</code></pre> <p>&nbsp;</p> </h1> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """  from impala.dbapi import connect from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <pre><code class="language-python">#impyla  thrift==0.2.1  与ibis依赖版本相同，可同时使用     conn = connect(host='uatnd02.csdntest.com.local', port=10000, auth_mechanism='GSSAPI',kerberos_service_name='hive')     cur = conn.cursor()     cur.execute('SHOW databases') #不能有分号     cur.table_exists(table_name='account',database_name='dl_nccp') #return True or False     cur.ping() #return True or False     cur.status() #return True or False     cur.get_table_schema(table_name='account',database_name='dl_nccp') #return 表结构 类似desc     print(cur.fetchall())     cur.close()     conn.close()</code></pre> <p><img fetchpriority="high" decoding="async" alt="" height="271" src="http://img.555519.xyz/uploads/20221228/72a862ca43641590666eaeb2a04e5bc8.jpg"></p> </h1> <p>ibis是个很强大的第三方环境包，支持对各类数据库或文件系统进行访问，功能强大，并返回pandas dataframe格式，对数据开发人员很友好，这个包我用了两年多，非常<strong><span style="color:#86ca5e;">推荐</span></strong>。</p> <p>官方文档：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.ibis-project.org/getting-started.html"  rel="nofollow">https://docs.ibis-project.org/getting-started.html</a></p> <h3>环境</h3> <pre><code class="language-python"> """  ibis-framework==0.14.0  #pip install ibis-framework[impala]==0.14.0  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>官方文档以及源码里还有很多函数可供使用，这里仅列出常用的一些，建议使用ibis包的可以看看源码或官方文档。</p> <pre><code class="language-python">import ibis import pandas as pd import ibis.expr.datatypes as dt conf={ "impala_host":"uathd01.csdntest.com.local", "impala_port":21050, "kerberos_service_name":"impala", "auth_mechanism":"GSSAPI", "webhdfs_host1":"uatnd01.csdntest.com.local", "webhdfs_host2":"uatnd02.csdntest.com.local", "webhdfs_port":9870   #如果是hadoop3之前的版本这里的参数改为50070 } #获取hdfs连接 try:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host2"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)     hdfs_client.ls('/') except:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host1"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)  #获取impala连接 impala_client = ibis.impala.connect(host=conf["impala_host"], port=conf["impala_port"], hdfs_client = hdfs_client, auth_mechanism=conf["auth_mechanism"], timeout = 300)  # 直接读表，select * from dh_sales.r_order limit 10，返回pandas dataframe res = impala_client.table('r_order', database='dh_sales').execute(limit=10) print(type(res)) print(res.dtypes) print(res)  #使用SQL查询impala res = impala_client.sql("""select area,is_oversea,dw_ins_ts,sum(gid_cnt) from dh_t3_report_crm.r_duration_area_metr where is_oversea=0 group by 1,2,3 limit 5""") df_res = res.execute() print(df_res)  #列库下所有表 impala_client.list_tables(database='dl_common')  #使用pandas dataframe建表，类型自动映射 impala_client.create_table(table_name='ibis_create0602',obj=sys_dict,database='default',force=True) ... #pd_res_acc 略 #pd_res_cre 略 ... #使用pandas datraframe插入数据 impala_client.insert(table_name='tmp_account',obj=pd_res_acc,database='default',overwrite=True) impala_client.insert(table_name='ibis_create',obj=pd_res_cre,database='default',overwrite=True)</code></pre> <p><img decoding="async" alt="" height="681" src="http://img.555519.xyz/uploads/20221228/761baff5d40daf80716316d5edd6721b.jpg"></p> <p><img decoding="async" alt="" height="90" src="http://img.555519.xyz/uploads/20221228/8cfa2f3a8afd6e8b8e4a18beb8c0fd48.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="39" src="http://img.555519.xyz/uploads/20221228/4e022e96eaee72cb7f3327df0a74f6b7.jpg"></p> <h3>BUG解决</h3> <p>执行insert或create命令可能会报下面的错误，这个是源码级别的BUG，参考下面的连接修改源码即可解决：</p> <pre><code>UnicodeEncodeError: 'latin-1' codec can't encode characters in position 160-161: ordinal not in range(256)</code></pre> <p><img loading="lazy" decoding="async" alt="" height="710" src="http://img.555519.xyz/uploads/20221228/efb3d6edd2e109e83b51df5bceb810d1.jpg"></p> <p>参考：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/ibis-project/ibis/issues/2120"  rel="nofollow">https://github.com/ibis-project/ibis/issues/2120</a></p> <p><span style="color:#86ca5e;"><em>vim&nbsp;/home/tools/python3/<strong>Python-3.6.8/lib/python3.6/site-packages/hdfs/client.py&nbsp;</strong></em></span></p> <p><img loading="lazy" decoding="async" alt="" height="169" src="http://img.555519.xyz/uploads/20221228/cc08cf49f942f6b0f83acacb6c82ea30.jpg"></p> </h1> <h3>环境</h3> <p><span style="color:#86ca5e;"><em>vim /etc/profile</em></span></p> <pre><code>export SPARK_HOME=/opt/cloudera/parcels/CDH/lib/spark export SPARK_CONF_DIR=$SPARK_HOME/conf export PYTHONPATH=/home/tools/anaconda3/envs/csdn/bin export PYSPARK_PYTHON=/home/tools/anaconda3/envs/csdn/bin/python3.6</code></pre> <pre><code class="language-python">""" pyspark==2.4.5 """</code></pre> <h3>kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>使用pyspark连接hive进行查询，并将spark dataframe转为pandas dataframe：</p> <pre><code class="language-python">from __future__ import division #import findspark as fs #fs.init() import pandas as pd from pyspark.sql import HiveContext,SparkSession,SQLContext from pyspark import SparkContext, SparkConf import pyspark.sql.functions as F import datetime as dt from datetime import datetime import random import numpy as np from log3 import log_to_file, log from pyspark.sql.types import *  conf = SparkConf().setMaster("yarn").setAppName("MF_return_calc") sc = SparkContext(conf=conf) sc.setLogLevel("WARN") hiveCtx = HiveContext(sc) spark = SparkSession.builder.master("yarn").appName("MF_return_calc").config("spark.debug.maxToStringFields", "100").getOrCreate()  #执行SQL test_sql = """select * from dl_nccp.account limit 5""" res = hiveCtx.sql(test_sql) type(res) #返回spark dataframe res.head(3) res_pd = res.toPandas() #将spark dataframe转为pandas dataframe res_pd</code></pre> <p><img loading="lazy" decoding="async" alt="" height="665" src="http://img.555519.xyz/uploads/20221228/ed029127ed79ff279d7196947174d608.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="251" src="http://img.555519.xyz/uploads/20221228/b92e4ec433f6d85624ccad6958e62271.jpg"></p> <p>&nbsp;</p> <p>好了上面四种在python中访问hive和impala的方式就介绍完了，希望对大家有帮助，谢谢！</p> <p>希望本文对你有帮助，请点个赞鼓励一下作者吧~ 谢谢！</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-29320.htm">动物疫苗保质期一般多久啊多少钱（动物疫苗保质期一般多久啊多少钱啊）</a></p>
                                        <p>下一个：<a href="/news/article-30110.htm">java class 文件格式解析</a></p>
                                    </div>
                                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-30-free-v2ray-subscribe.htm" title="11月30日|Shadowrocket/SSR/V2ray/Clash每天更新22M/S免费节点订阅链接，Clash便宜机场订阅">11月30日|Shadowrocket/SSR/V2ray/Clash每天更新22M/S免费节点订阅链接，Clash便宜机场订阅</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-31-shadowrocket-node.htm" title="8月31日|SSR/Shadowrocket/V2ray/Clash每天更新19.9M/S免费节点订阅链接">8月31日|SSR/Shadowrocket/V2ray/Clash每天更新19.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-19625.htm" title="宠物店一年盈利多少合适（正常宠物店一年利润有多少）">宠物店一年盈利多少合适（正常宠物店一年利润有多少）</a></li>
                        <li class="py-2"><a href="/news/article-23748.htm" title="北京中农大动物医院有限公司上班怎么样 北京中农大动物医院有限公司上班怎么样啊">北京中农大动物医院有限公司上班怎么样 北京中农大动物医院有限公司上班怎么样啊</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-23-free-ssr-subscribe.htm" title="6月23日|Shadowrocket/SSR/Clash/V2ray每天更新18.6M/S免费节点订阅链接">6月23日|Shadowrocket/SSR/Clash/V2ray每天更新18.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-15-free-node-subscribe-links.htm" title="9月15日|Clash/V2ray/SSR/Shadowrocket每天更新18.1M/S免费节点订阅链接">9月15日|Clash/V2ray/SSR/Shadowrocket每天更新18.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-30-free-ssr-node.htm" title="7月30日|V2ray/Shadowrocket/SSR/Clash每天更新18.1M/S免费节点订阅链接">7月30日|V2ray/Shadowrocket/SSR/Clash每天更新18.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-27-clash-node-daily-updates.htm" title="7月27日|Clash/V2ray/SSR/Shadowrocket每天更新20.8M/S免费节点订阅链接">7月27日|Clash/V2ray/SSR/Shadowrocket每天更新20.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22830.htm" title="kafka生产者发送消息可靠性">kafka生产者发送消息可靠性</a></li>
                        <li class="py-2"><a href="/news/article-18973.htm" title="深入理解 Go 中的字符串_Golang">深入理解 Go 中的字符串_Golang</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">17</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <!-- Footer -->
        <footer class="footer">
            <div class="parallax_background parallax-window" data-parallax="scroll" data-image-href="/assets/website/img/clash_nodes/footer.jpg" data-speed="0.8"></div>
            <div class="footer_overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="footer_content text-center d-flex flex-column align-items-center justify-content-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>
                                ClashNodes分享订阅站 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="/assets/website/js/frontend/clash_nodes/jquery-3.2.1.min.js"></script>
    <script src="__ADDON__/css/clash_nodes/bootstrap-4.1.2/popper.js"></script>
    <script src="__ADDON__/css/clash_nodes/bootstrap-4.1.2/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/owl.carousel.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/easing/easing.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/plugins/parallax-js-master/parallax.min.js"></script>
    <script src="/assets/website/js/frontend/clash_nodes/about.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>